#!/usr/bin/env ruby

require 'webrick'       # server
require 'ostruct'       # command line options
require 'optparse'      # command line options
require 'logger'        # webrick
require 'base64'        # favicon storage
require 'markdown'      # text rendering
require 'mime/types'    # serving of unknown files
require 'erb'           # template management
require 'cgi'           # for escaping only
require 'fileutils'     # removing directories/files
require 'pathname'      # for removing dirs
require 'yaml'          # for config loading


DIR_TEMPLATE= %{
    <% if pages.length > 0 %>
      <h2>Pages</h2>
      <ul>
      <% pages.each{|c| 
        page_name = File.basename(c)[0..-(File.extname(c).length+1)]
        %>
        <li><a href="<%=h c%>"/><%=h page_name%></a></li>
      <%}%>
      </ul>
    <% end %>

    <% if (dirs.length > 0) %>
      <h2>Directories</h2>
      <ul>
      <% dirs.each{|c| %>
        <li><a href="<%=h c%><%= File.directory?(File.join(basedir, c)) ? '/' : ''%>"/><%=h c%></a></li>
      <%}%>
      </ul>
    <% end %>

    <% if files.length > 0 %>
      <h2>Files</h2>
      <ul>
      <% files.each{|c| %>
        <li><a href="<%=h c%>"/><%=h c%></a></li>
      <%}%>
      </ul>
    <% end %>
} 

CSS = %q{
      div#banner{
        width: 100%;
        border-bottom: solid 2px #333;
        background-color: #eee;
      }

      div#banner h1{
        font-size: 1em;
        margin: 0.1em;
        padding: 0.1em;
        line-height: 1em;
      }

      div#footer{
        background-color: #eee;
        border-top: solid 2px #333;
        font-size: smaller;
        text-align: center;
      }

      div#menu{
        padding: 0 0.2em;
        text-align: right;
        float: right;
        font-size: smaller;
      }

      div#menu a{
        text-decoration: none;
        color: blue;
      }

      textarea#editbox{
        width: 95%;
        min-width: 400px;
        height: 400px;
        margin: 0 auto;
        display: block;
      }

      div#hide_edit{
        width: 100%;
        background-color: #eee;
        text-align: center;
        font-size: smaller;
      }

      div#prompt_edit_extern{
        font-size: smaller;
        text-align: center;
        width: 100%;
      }
      
      div#edit input, div#edit textarea, div#upload input{
        border: solid 1px #777;
        padding: 0.4em 0.8em;
        margin: 1em;
        background: transparent;
      }

      div#edit input, div#upload input{
        box-shadow: 1px 1px 5px #888;
        background-color: #ddd;
      }

      div#edit input:focus, div#edit input:hover, div#edit textarea:focus,
      div#upload input:focus, div#upload input:hover, div#upload textarea:focus
      {
        background-color: white;
      }

      div#hide_edit div#prompt_stick a{
        display: block;
        width: 100%;
      }

      div#hide_edit div#show_edit, div#hide_edit:hover div#prompt, div#hide_edit div#prompt_stick, div#ddmenu_inner{
        display: none;
      }

      div#edit, div#upload{
        padding: 1em 0;
        text-align: center;
      }

      div#errors{
        border: solid 1px red;
        margin: 0.2em;
        padding: 0 0.2em;
        background-color: #ffd;
        font-size: smaller;
      }

      div#errors span#click_hide{
        float: right;
      }

      div#errors ul{
        margin: 0 0.1em;
        padding: 0;
      }

      div#errors ul li{
        list-style-type: none;
        padding: 0.1em;
        margin: 0.1em;
      }

      div#ddmenu{
        display: block;
        position: fixed;
        top: 0;
        left: 0;
        padding: 0.2em;
        margin: 0;
        background: white;
        overflow-y: auto;
        overflow-x: hidden;
        max-height: 100%;
      }

      div#ddmenu:hover{
        border-right: solid 2px #777;
        border-bottom: solid 2px #777;
        box-shadow: 1px 1px 5px #aaa;
      }

      div#ddmenu:hover span#prompt_menu{
        display: none;
      }

      div#ddmenu_inner h2{
        font-size: 1em;
        margin: 0.1em;
        padding: 0.1em;
        line-height: 1em;
        border-bottom: solid 1px #777;
      }

      div#ddmenu_inner ul{
        padding: 0;
        margin: 0;
        width: 100%;
        list-style-type: none;
      }
      
      div#ddmenu_inner ul li a{
        display: block;
        width: 100%;
        font-size: smaller;
      }

      div#ddmenu_inner ul li{
        padding: 0 0.4em;
      }
      
      div#hide_edit:hover div#show_edit, div#hide_edit:hover div#prompt_stick, div#hide_edit:hover div#upload, div#hide_edit:hover div#edit, div#ddmenu:hover div#ddmenu_inner, div#ddmenu_inner :hover{
        display: block;
      }

      /* ------------ Main content styling ---------------- */
      /* Taken from https://github.com/jasonm23/markdown-css-themes */

      html { font-size: 100%; overflow-y: scroll; -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; }

      body{
        color:#444;
        font-family:Georgia, Palatino, 'Palatino Linotype', Times, 'Times New Roman', serif;
        font-size:12px;
        line-height:1.5em;
        padding:1em;
        margin:auto;
        max-width:42em;
        background:#fefefe;
      }

      a{ color: #0645ad; text-decoration:none;}
      a:visited{ color: #0b0080; }
      a:hover{ color: #06e; }
      a:active{ color:#faa700; }
      a:focus{ outline: thin dotted; }
      a:hover, a:active{ outline: 0; }

      /* a[href$=".pdf"]:after { content: " [PDF]"; }
      a[href^="http://"]:after { content: "*"; }
      a[href$="https://"]:after { content: "*"; }
      a[href$="ftp://"]:after { content: " [ftp]"; } */

      ::-moz-selection{
        background:rgba(255,255,0,0.3);color:#000
      }
      ::selection{
        background:rgba(255,255,0,0.3);color:#000
      }

      a::-moz-selection{background:rgba(255,255,0,0.3);color:#0645ad}
      a::selection{background:rgba(255,255,0,0.3);color:#0645ad}

      p{
      margin:1em 0;

      }

      img{
        max-width:100%;
      }

      h1,h2,h3,h4,h5,h6{
        font-weight:normal;
        color:#111;
        line-height:1em;
      }
      h4,h5,h6{ font-weight: bold; }
      h1{ font-size:2.5em; }
      h2{ font-size:2em; }
      h3{ font-size:1.5em; }
      h4{ font-size:1.2em; }
      h5{ font-size:1em; }
      h6{ font-size:0.9em; }

      blockquote{
        color:#666666;
        margin:0;
        padding-left: 3em;
        border-left: 0.5em #EEE solid;
      }
      hr { display: block; height: 2px; border: 0; border-top: 1px solid #aaa;border-bottom: 1px solid #eee; margin: 1em 0; padding: 0; }
      pre, code, kbd, samp { color: #000; font-family: monospace, monospace; _font-family: 'courier new', monospace; font-size: 0.98em; }
      pre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; }

      b, strong { font-weight: bold; }

      dfn { font-style: italic; }

      ins { background: #ff9; color: #000; text-decoration: none; }

      mark { background: #ff0; color: #000; font-style: italic; font-weight: bold; }

      sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }
      sup { top: -0.5em; }
      sub { bottom: -0.25em; }

      ul, ol { margin: 1em 0; padding: 0 0 0 2em; }
      li p:last-child { margin:0 }
      dd { margin: 0 0 0 2em; }

      img { border: 0; -ms-interpolation-mode: bicubic; vertical-align: middle; }

      table { border-collapse: collapse; border-spacing: 0; }
      td { vertical-align: top; }

      @media only screen and (min-width: 480px) {
        body{font-size:14px;}
      }

      @media only screen and (min-width: 768px) {
        body{font-size:16px;}
      }

      @media print {
        * { background: transparent !important; color: black !important; filter:none !important; -ms-filter: none !important; }
        p{  text-align:justify; text-justify:inter-word; }
        body{font-size:10pt; max-width:100%;}
        a, a:visited { text-decoration: none; border-bottom: dotted 1px #777;}
        hr { height: 1px; border:0; border-bottom:1px solid black; }
        /* a[href]:after { content: " (" attr(href) ")"; } */
        abbr[title]:after { content: " (" attr(title) ")"; }
        .ir a:after, a[href^="javascript:"]:after, a[href^="#"]:after { content: ""; }
        pre, blockquote { border: 1px solid #999; padding-right: 1em; page-break-inside: avoid; }
        tr, img { page-break-inside: avoid; }
        img { max-width: 100% !important; }
        @page { margin: 15mm 25mm 20mm; }
        /*@page :left { margin: 15mm 20mm 15mm 10mm; }
        @page :right { margin: 15mm 10mm 15mm 20mm; }*/
        p, h2, h3 { orphans: 3; widows: 3; }
        h2, h3 { page-break-after: avoid; }
        div#banner, div#hide_edit, div#ddmenu{ display: none;}
        em{ font-weight: bold; }
      }

}
 
HEAD_TEMPLATE = %q{
<html>
  <head>
    <title><%=h title %> -- Wik</title>
    <meta charset="UTF-8">

    <style type="text/css">
      <%=@css%>
    </style>

  </head>
  <body>
    <div id="banner">
      <div id="menu">

       
        <% @header_info.each\{|h| 
              case h
              when :counts %>
                [<%=pages.length%>p, <%=files.length%>f, <%=dirs.length - (dirs.include?('..') ? 1 : 0)%>d]
           <% when :direct 
                if File.exist?(path)
           %>
                [<a href="?direct" title="direct download">&darr;</a>]
           <% 
                end
           when :words 
                if File.exist?(path)
           %>
                [<%= File.read(path).split(/\w+/).count%>w]
           <% 
                end
           when :files %>
                [<%= files.delete_if{|f| not @extensions.include?(File.extname(f))}.map{|c|
                  c = "<a href='#{c}#{File.directory?(File.join(basedir, c)) ? '/' : ''}'/>#{h c}</a>"
                }.join(", ") %>]
           <% when :dirs %> 
                [<%=dirs.map{|c|
                  c = "<a href='#{c}#{File.directory?(File.join(basedir, c)) ? '/' : ''}'/>#{h c}/</a>"
                }.join(", ") %>]
           <% when :up %> 
                <% if File.absolute_path(basedir) != File.absolute_path(@basedir) %>
                  [<a title="Move up a directory" href="../">&larr;</a>]
                <% end %>
           <% when :menu %> 
           <% end
        \}
        %>

      </div>
      <h1><%= title %></h1>
      
    </div>
      <% if @menu %>
        <div id="ddmenu"><span id="prompt_menu">[menu]</span>
          <div id="ddmenu_inner">
            } + DIR_TEMPLATE + %q{
          </div>
        </div>
      <% end %>

    <!-- error listing -->
    <% if msgs.length > 0 %>
      <div id="errors">
        <span id="click_hide" onclick="javascript:document.getElementById('errors').style.display='none';">click to hide</span>
        <ul>
          <% msgs.each{|e| %>
            <li><%=h e%></li>
          <% } %>
        </ul>
      </div>
    <% end %>
}

EDIT_TEMPLATE = %{
  <% if type == :text and not readonly? %>
    <div id="edit">
      <% if @editmethods.include?(:extern) %>
        <div id="prompt_edit_extern"><a href="edit-file://<%=h File.absolute_path(path)%>">Click to edit in external application</a></div>
      <% end %>

      <% if @editmethods.include?(:form) %>
        <form action="" method="POST" onsubmit="window.onbeforeunload = null;">
          <textarea id="editbox" name="content" onchange="window.onbeforeunload = function(e){ return 'Navigating elsewhere may cause you to lose edits.'; }"><%=h File.exist?(path) ? File.read(path) : '' %></textarea>
          <% if @editpass.length > 0 %>
            <label for="pass">Password:</label><input type="password" name="pass" value=""/>
          <% end %>
          <input type="hidden" value="<%=h path%>" name="path"/>
          <!--<input type="reset" value="Reset"/>-->
          <input type="submit" value="Edit <%=h title%>"/>
        </form>
      <% end %>
    </div>
  <% end %>
}

UPLOAD_TEMPLATE = %q{
  <% if @allow_upload and @editmethods.include?(:form) %>
    <div id="upload">
      <form enctype="multipart/form-data" action="" method="POST">
        <label for="file">File:</label> 
        <input name="file" id="file" onchange="javascript:{document.getElementById('filename').value = this.value.match(/[^\/\\\\]+$/);};" type="file" /><br/>

        <label for="filename">Filename:</label>
        <input id="filename" type="text" name="filename" value="" />

        <input id="clobber" type="checkbox" name="clobber" value="yes" />
        <label for="clobber">overwrite?</label><br/>

        <input type="hidden" value="<%=h basedir%>" name="dir"/>
        <% if @editpass.length > 0 %>
          <label for="pass">Password:</label><input type="password" name="pass" value=""/>
        <% end %>
        <input type="submit" value="Upload File" />
      </form>
    </div>
  <% end %>

}

FOOT_TEMPLATE = %{
    <div id="footer">
      <% if File.exist?(path) %>
        Last edited <%= File.mtime(path).strftime(@date_format) %>
      <% end %>
    </div>
}

END_TEMPLATE = %{
  </body>
</html>
}

PAGE_TEMPLATE= HEAD_TEMPLATE + %{
    <%= content %>
} + FOOT_TEMPLATE + %{
    <% if not readonly? %>
      <div id="hide_edit">
        <a name="edit_box"/>
        <div id="prompt">Hover to show edit options.</div>
        <div id="prompt_stick"><a name="edit_box" href="#" onclick="javascript:{document.getElementById('prompt_stick').style.display = 'none'; document.getElementById('prompt').style.display = 'none'; document.getElementById('show_edit').style.display = 'block'; return false;}">Click to pin edit box.</a></div>
        <div id="show_edit">
} + EDIT_TEMPLATE + %{
        <% if @allow_upload %>
          <hr/>
} + UPLOAD_TEMPLATE + %{
        <% end %>
        </div>
      </div>
    <% end %>
} + END_TEMPLATE

MISSING_TEMPLATE = HEAD_TEMPLATE + DIR_TEMPLATE + %{
  <% if not readonly? %>
    <hr/>
    <h2>Create Page: <%=h title%></h2>
} + EDIT_TEMPLATE + %{
  <% end 
  if @allow_upload %>
    <hr/>
    <h2>Upload File</h2>
} + UPLOAD_TEMPLATE + %{
  <% end %>

} + FOOT_TEMPLATE + END_TEMPLATE

FAVICON = "AAABAAMAICEAAAEAIAAsEQAANgAAABAaAAABACAAEAcAAGIRAAAwOQAAAQAgALAsAAByGAAAKAAA
ACAAAABCAAAAAQAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
AAAAUwAAACv///8A////AP///wD///8A////AP///wAAAAAdAAAAVAAAAAj///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wAAAACYAAAA/AAAADL///8A////AP///wD///8A////AAAAAC8AAAD/AAAA
rwAAAAH///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AAAAAG4AAAD/AAAAzwAAAAX///8A////AP///wD/
//8AAAAAJgAAAP8AAAD/AAAAY////wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAARQAAAP8AAAD6AAAA
e////wD///8A////AP///wAAAAAeAAAA/wAAAPYAAACxAAAAJP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAA
AAAbAAAA/wAAANsAAAC8AAAAKv///wD///8A////AAAAABUAAAD/AAAA9AAAABgAAACwAAAABf//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AAAAAAEAAADyAAAA/gAAADIAAADAAAAAA////wD///8AAAAADAAAAP8AAAD0
////AAAAAEQAAACF////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AAAAAMgAAAD/AAAAMwAAAIEAAABw////AP//
/wAAAAAHAAAA/wAAAPT///8A////AAAAAIEAAABG////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AAAAAAH///8A////AP///wD///8AAAAAnwAAAP8AAABg
AAAACAAAAM4AAAAj////AAAAAAYAAAD/AAAA9P///wD///8AAAAABAAAALIAAAAY////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAAiAAAAJcAAAAU////AP//
/wAAAAB1AAAA/wAAAI3///8AAAAAPwAAAL0AAAABAAAABQAAAP8AAAD0////AP///wD///8AAAAA
NwAAALgAAAAB////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAADk
AAAA/wAAAJT///8A////AAAAAEwAAAD/AAAAuf///wD///8AAAAAnQAAAGYAAAAEAAAA/wAAAPT/
//8A////AP///wD///8AAAAAoQAAAF7///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AAAAAPIAAAD/AAAAKP///wD///8AAAAAIgAAAP8AAADm////AP///wAAAAASAAAA
2wAAAB8AAAD/AAAA9P///wD///8A////AP///wAAAAAbAAAA5wAAABT///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8AAAAAwQAAAP4AAAAE////AP///wAAAAADAAAA9wAAAP8A
AAAT////AP///wAAAABaAAAAtQAAAP8AAAD0////AP///wD///8A////AP///wAAAACwAAAAmf//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAABEAAAA/wAAADT///8A////
AP///wAAAADPAAAA/wAAAED///8A////AAAAAAEAAAC4AAAA/wAAAPT///8A////AP///wD///8A
////AAAAAFQAAAD5AAAAFv///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAA
AABnAAAA3AAAAEsAAAATAAAACAAAAKYAAAD/AAAAbP///wD///8A////AAAAACEAAAD2AAAA9v//
/wD///8A////AP///wD///8AAAAAJAAAAP8AAAB+////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wAAAAAoAAAAmgAAANYAAAD2AAAA+AAAAPsAAADVAAAAOP///wD///8A
////AAAAAGQAAADr////AP///wD///8A////AP///wAAAAALAAAA/wAAAL////8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AAAAAA3///8A////AP///wD///8A////AAAAADQAAAD/AAAA
5v///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8AAAAAsgAAAP8AAADL////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wAAAAAeAAAApAAAAFX///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//////////////////
/////////////////////////5/P///Pz///z8f//8fL///Lzf//y83//83O//nmz3/45s9/+edP
v/nnj5/954/f/ufP3/8D78/////P////j////9//////////////////////////////////////
/////ygAAAAQAAAANAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAA
AAgAAADfAAAAwwAAACkAAAAJAAAA4QAAAMUAAAA0////AP///wD///8A////AP///wD///8A////
AP///wAAAAAZAAAA/wAAAEUAAACDAAAARAAAAP8AAABHAAAAhQAAAD3///8A////AP///wD///8A
////AP///wD///8AAAAAAQAAAOYAAAAaAAAAAQAAAHEAAAD+AAAAIAAAAAEAAACJAAAALf///wD/
//8A////AP///wD///8A////AP///wAAAACCAAAAXv///wAAAAAEAAAA0gAAAFv///8AAAAADgAA
ALIAAAAB////AP///wD///8A////AAAAABsAAABAAAAACgAAAKoAAAAH////AAAAAG8AAACy////
AP///wAAAACMAAAAWP///wD///8A////AP///wD///8AAAAAgQAAAAwAAAAyAAAAlgAAAAEAAAAb
AAAA+QAAABP///8AAAAAUgAAAKr///8A////AP///wD///8A////AAAAAEwAAADZAAAA2AAAANYA
AABX////AAAAAIIAAABK////AAAAAC0AAADo////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wAAAAATAAAApP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA8z8AAPVfAAD3bwAA93cAAPu3AADtuwAA8bsA
AP/7AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAAKAAAADAAAAByAAAA
AQAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAApgAAAHIAAAAk////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAAoAAAAGkAAAAU////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAAABAAAAAQAAAAEA
AAABAAAAvAAAAP8AAAD/AAAAP////wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8AAAAAywAAAP8AAAD1AAAAIf///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wAAAAABAAAAAQAAAAEAAAABAAAAkwAAAP8AAAD/AAAA3gAAAAz///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8AAAAAvAAAAP8AAAD/AAAAuAAAAAH///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wAAAAABAAAAAgAAAAEAAAABAAAAagAAAP8AAAD/
AAAA/wAAAJf///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAArAAAAP8A
AAD/AAAA/wAAAFv///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAAAB////
AP///wD///8AAAAAPwAAAP8AAAD/AAAA/wAAAP8AAABF////AP///wD///8A////AP///wD///8A
////AP///wD///8AAAAAnQAAAP8AAAD/AAAA/wAAAOwAAAAf////AAAAAAH///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8AAAAAFgAAAP8AAAD/AAAA/wAAAP4AAADjAAAA
D////wD///8A////AP///wD///8A////AP///wD///8AAAAAjgAAAP8AAAD/AAAA/wAAAHoAAADG
AAAABf///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAAAQAA
AO0AAAD/AAAA/wAAAK4AAAD5AAAAnv///wD///8A////AP///wD///8A////AP///wD///8AAAAA
fgAAAP8AAAD/AAAA/wAAAAIAAAC1AAAAhv///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AAAAAMMAAAD/AAAA/wAAAK8AAAB7AAAA/wAAAEz///8A////AP//
/wD///8A////AP///wD///8AAAAAbwAAAP8AAAD/AAAA/////wAAAAASAAAA3gAAAEX///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAAJoAAAD/AAAA/wAAANsA
AAAFAAAAzgAAAOcAAAAS////AP///wD///8A////AP///wD///8AAAAAXwAAAP8AAAD/AAAA////
/wD///8AAAAANQAAAOEAAAAW////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AAAAAHAAAAD/AAAA/wAAAP4AAAAKAAAAMAAAAPsAAACl////AP///wD///8A////AP///wD/
//8AAAAAUAAAAP8AAAD/AAAA/////wD///8A////AAAAAGoAAAC3AAAAAv///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AAAAAEcAAAD/AAAA/wAAAP8AAAAz////AAAAAIIAAAD/
AAAAUv///wD///8A////AP///wD///8AAAAARwAAAP8AAAD/AAAA/////wD///8A////AAAAAAEA
AACmAAAAcf///wD///8A////AP///wD///8A////AP///wD///8A////AAAAAAH///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAAB4AAAD/AAAA
/wAAAP8AAABf////AAAAAAYAAADTAAAA6gAAABX///8A////AP///wD///8AAAAAQAAAAP8AAAD/
AAAA/////wD///8A////AP///wAAAAAMAAAA0AAAADP///8A////AP///wD///8A////AP///wD/
//8A////AAAAAAH///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AAAAAAEAAADzAAAA/wAAAP8AAACL////AP///wAAAAA1AAAA/QAAAKsAAAAB////
AP///wD///8AAAAAOQAAAP8AAAD/AAAA/////wD///8A////AP///wD///8AAAAALAAAANMAAAAN
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAA
AAAHAAAAWwAAAAH///8A////AP///wD///8A////AP///wAAAADLAAAA/wAAAP8AAAC3////AP//
/wD///8AAAAAiAAAAP8AAABY////AP///wD///8AAAAAMgAAAP8AAAD/AAAA/////wD///8A////
AP///wD///8A////AAAAAH0AAACg////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wAAAABfAAAA/wAAAMAAAAAo////AP///wD///8A////AP///wAA
AACiAAAA/wAAAP8AAADk////AP///wD///8AAAAACAAAANgAAADtAAAAGP///wD///8AAAAAKwAA
AP8AAAD/AAAA/////wD///8A////AP///wD///8A////AAAAAAYAAADSAAAAWP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAAC9AAAA/wAAAP8AAAD5
AAAAPP///wD///8A////AP///wAAAAB4AAAA/wAAAP8AAAD/AAAAEf///wD///8A////AAAAADoA
AAD+AAAAsgAAAAH///8AAAAAJAAAAP8AAAD/AAAA/wAAAAP///8A////AP///wD///8A////AP//
/wAAAAA6AAAA6QAAABH///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wAAAADjAAAA/wAAAP8AAADlAAAACP///wD///8A////AP///wAAAABPAAAA/wAAAP8AAAD/
AAAAPP///wD///8A////AP///wAAAACTAAAA/wAAAF////8AAAAAHAAAAP8AAAD/AAAA/wAAAAn/
//8A////AP///wD///8A////AP///wD///8AAAAArQAAAJj///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wAAAAD2AAAA/wAAAP8AAABw////AP///wD///8A////
AP///wAAAAAmAAAA/wAAAP8AAAD/AAAAaP///wD///8A////AP///wAAAAAPAAAA5wAAAPAAAAAc
AAAAFQAAAP8AAAD/AAAA/wAAAA7///8A////AP///wD///8A////AP///wD///8AAAAAJgAAAPsA
AAA5////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAADQAAAA/wAA
AP8AAAA1////AP///wD///8A////AP///wAAAAAEAAAA+QAAAP8AAAD/AAAAlP///wD///8A////
AP///wD///8AAAAAWAAAAP8AAAC5AAAADwAAAP8AAAD/AAAA/wAAABT///8A////AP///wD///8A
////AP///wD///8A////AAAAALUAAADSAAAABf///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wAAAAClAAAA/wAAAP8AAAAO////AP///wD///8A////AP///wD///8AAAAA0wAA
AP8AAAD/AAAAwP///wD///8A////AP///wD///8AAAAAAQAAALoAAAD/AAAAbAAAAP8AAAD/AAAA
/wAAABr///8A////AP///wD///8A////AP///wD///8A////AAAAAFIAAAD/AAAAc////wD///8A
////AP///wD///8A////AP///wD///8A////AP///wAAAABKAAAA/wAAAP8AAAAX////AP///wD/
//8A////AP///wD///8AAAAAqgAAAP8AAAD/AAAA7AAAAAH///8A////AP///wD///8A////AAAA
ACUAAAD4AAAA9AAAAP8AAAD/AAAA/wAAACD///8A////AP///wD///8A////AP///wD///8A////
AAAAAAYAAADqAAAA6gAAAAj///8A////AP///wD///8A////AP///wD///8A////AP///wAAAAAB
AAAAwAAAAP8AAABe////AP///wD///8A////AP///wD///8AAAAAgAAAAP8AAAD/AAAA/wAAABj/
//8A////AP///wD///8A////AP///wAAAAB+AAAA/wAAAP8AAAD/AAAA/wAAACX///8A////AP//
/wD///8A////AP///wAAAAAB////AAAAAAEAAACSAAAA/wAAAGD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8AAAAALQAAAO4AAADkAAAAIP///wD///8A////AP///wD///8A
AAAAVwAAAP8AAAD/AAAA/wAAAET///8A////AP///wD///8A////AP///wAAAAAHAAAA2QAAAP8A
AAD/AAAA/wAAACz///8A////AP///wD///8A////AP///wAAAAABAAAAAQAAAAEAAABgAAAA/wAA
AM4AAAAB////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAAC4AAADpAAAA
8QAAAIcAAABIAAAAHAAAABIAAAALAAAAMQAAAP8AAAD/AAAA/wAAAHD///8A////AP///wD///8A
////AP///wD///8AAAAAQwAAAP8AAAD/AAAA/wAAADn///8A////AP///wAAAAABAAAAAQAAAAEA
AAAB////AP///wAAAAA3AAAA/wAAAP8AAAA9////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wAAAAAhAAAApgAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA
/wAAALEAAAAI////AP///wD///8A////AP///wD///8A////AAAAAKUAAAD/AAAA/wAAAEn///8A
////AP///wD///8A////AP///wD///8A////AP///wAAAAAPAAAA/wAAAP8AAACR////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAACsAAACcAAAA3wAA
APsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADoAAAARP///wD///8A////AP///wD///8A////
AAAAABcAAACsAAAA/AAAAFj///8A////AP///wD///8A////AP///wD///8A////AP///wAAAAAb
AAAA/wAAAP8AAADM////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AAAAAAMAAAALAAAADQAAAA8AAAASAAAAFAAAABYAAAAYAAAAF///
/wD///8A////AP///wD///8A////AP///wD///8AAAAAHAAAACb///8A////AP///wD///8A////
AP///wD///8A////AP///wAAAABCAAAA/wAAAP8AAADs////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAACCAAAA/wAAAP8AAAD7////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAA
ACMAAADxAAAA/wAAAP8AAADr////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AAAAAE0AAAD4AAAA/wAAAP8AAAC3////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAAAwAAAAwwAAAMkA
AAA3////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8AAAAAAQAAAAH///8A////AAAAAAH///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAAAQAAAAH///8A////
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////wAA////////AAD///////8AAP//////
/wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
AAD///////8AAP/v/9///wAA/+P/x///AAD/4f/D//8AAP/w/8P//wAA//D/wf//AAD/8H/C//8A
AP/wP+J//wAA//C/43//AAD/8J/jv/8AAP/4z+Pf/wAA//jP49//AAD/+Ofj7/8AAP/4c+P3/wAA
//hz4/v/AAD5+Hnj+/8AAPD8fOP9/wAA8Px84/z/AADx/H5j/v8AAPH8PyP+fwAA8fw/I/9/AAD5
/D+D/z8AAPn8P8P/PwAA/P4/w/+fAAD+Pj/j/58AAP8AH+P/jwAA/8AP8/+PAAD//////48AAP//
////DwAA//////8PAAD//////w8AAP//////nwAA////////AAD///////8AAP///////wAA////
////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD/////
//8AAP///////wAA////////AAD///////8AAA=="

DEFAULT_OPTIONS               = OpenStruct.new
DEFAULT_OPTIONS.daemonise     = false 
DEFAULT_OPTIONS.interface     = "127.0.0.1"
DEFAULT_OPTIONS.port          = 8080
DEFAULT_OPTIONS.path          = "./"
DEFAULT_OPTIONS.default       = 'Index'
DEFAULT_OPTIONS.editpass      = ''
DEFAULT_OPTIONS.cleandirs     = true 
DEFAULT_OPTIONS.favicon       = FAVICON
DEFAULT_OPTIONS.extensions    = %w{markdown mdown mkdn md mkd mdwn mdtxt mdtext text} 
DEFAULT_OPTIONS.blacklist     = [/^\.git$/, /^\.svn$/]
DEFAULT_OPTIONS.editmethods   = [:form]
DEFAULT_OPTIONS.header_info   = [:up, :direct, :counts, :words]
DEFAULT_OPTIONS.menu          = true
DEFAULT_OPTIONS.browser       = nil
DEFAULT_OPTIONS.css           = CSS
DEFAULT_OPTIONS.allow_upload  = false
DEFAULT_OPTIONS.date_format   = "%d %b %Y, %H:%M"
DEFAULT_OPTIONS.config_file   = nil
DEFAULT_OPTIONS.fix_line_end  = true

# Parse command-line options.
def parse(opts)
  op = OptionParser.new do |o|
    o.on('-i', '--interface INTERFACE', 'Listen on the given interface (default is 127.0.0.1, set to '' for all)'){|x| opts.interface = x.to_s; opts.editmethods.delete(:extern) }
    o.on('-p', '--port PORT',           'Port to listen on'){ |x| opts.port = x.to_i }
    o.on('-n', '--daemonise',           'Daemonise process'){ |x| opts.daemonise = true }
    o.on('-r', '--read-only',           'Disable editing features'){ |x| opts.editmethods = [] }
    o.on('-x', '--external-editing',    'Enable external edit links (disabled if interface is not \'127.0.0.1\')'){|x| opts.editmethods << :extern if opts.interface == '127.0.0.1' }
    o.on('-w', '--no-web-editing',      'Disable web edit box'){|x| opts.editmethods.delete(:form) }
    o.on('-m', '--no-menu',             'Disable menu'){|x| opts.menu = false }
    o.on('-u', '--uploads',             'Allow file uploads'){|x| opts.allow_upload = true }
    o.on('-d', '--directory DIR',       'The directory in which to find content'){ |d| opts.path = d.to_s }
    o.on('-D', '--default INDEX',       'Index page name'){ |x| opts.default = x.to_s }
    o.on('-e', '--edit-pw PASSWORD',    'The password to use to prevent editing (insecure without SSL)'){|x| opts.editpass = x.to_s } 
    o.on('-C', '--no-clean-dirs',       'Leave empty directories when deleting blank files'){|x| opts.cleandirs = false }
    o.on('-f', '--favicon ICON',        'Read favicon from file'){|x| opts.favicon = File.exist?(x) ? Base64::encode64(File.open(x, 'rb').read()) : nil }
    o.on('-b', '--blacklist REGEX',     'Blacklist a certain regex from file listings (i.e. hidden files, RCS files)'){|x| opts.blacklist << Regexp.new(x) }
    o.on('-B', '--browser CMD',         'Browser command to launch after starting (quits when browser process ends)'){|x| opts.browser = x }
    o.on('-c', '--config FILE',         'Read configuration from the given file'){|x| opts.config_file = x if File.exists?(x) }
  end
  op.parse!

  return opts
end

def load_from_file(filename, opts)
  return opts if not File.exist?(filename) or not File.readable?(filename)

  # Load and check format
  file_opts = YAML.load(File.read(filename))
  raise "Incorrect options format (YAML hash is needed!)" if not file_opts.is_a? Hash

  file_opts.each{|k, v|
    v = case k.to_s
      when 'css'
        File.exist?(v.to_s) ? File.read(v) : CSS
      when 'blacklist'
        v.map{|x| Regexp.new(x) if not x.is_a? Regexp}
      else
        v
    end
    eval("opts.#{k.to_s}=v")
  }

  return opts
end

# Server that passes things onto the wiki engine
class Server < WEBrick::HTTPServlet::AbstractServlet
  def self.serve(port, bind=nil, local_resource_path="", engine=nil)
    server = WEBrick::HTTPServer.new(:Port        => port, 
                                     :BindAddress => bind)
    server.unmount("/")
    # server.mount("/#{resources}",     WEBrick::HTTPServlet::FileHandler, local_resource_path, {:FancyIndexing => false})
    server.mount("/", Server, {:engine => engine})

    %w{INT TERM HUP}.each{|s| trap s do server.shutdown end }
    server.start
  end

  def initialize(server, options={})
    super(server, options)
    @engine = options[:engine]
  end

  def do_GET(request, response)
    status, content_type, body, cookies = @engine.get(request)
    return build_response( response, status, cookies, content_type, body )
  end

  def do_POST(request, response)
    status, content_type, body, cookies = @engine.post(request)
    return build_response( response, status, cookies, content_type, body )
  end

  private

  # build a response to the client from the given data
  def build_response( response, status, cookies, content_type, body, cache=false)
    response.status           = status || 200
    cookies.each{ |k,v|         response.cookies << "#{k}=#{v}" }
    response['Content-Type']  = content_type || 'text/plain'
    response.body             = body || ''
    response['Cache-control'] = "no-cache" if not cache

    return response
  end
end


# Simple wik engine
class SimpleWikEngine
  def initialize(path, o = {} )
    @basedir      = path
    @cleandirs    = o[:cleandirs]     || false
    @editmethods  = o[:editmethods]   || [:extern, :form]
    @editpass     = o[:editpass]      || ''
    @default      = o[:default]       || "Index"
    @blacklist    = o[:blacklist]     || [/^\.\.?$/]
    @extensions   = o[:extensions]    || %w{markdown mdown mkdn md mkd mdwn mdtxt mdtext text}
    @extensions.map!{|x| ".#{x}"}
    @favicon      = o[:favicon]       || FAVICON
    @header_info  = o[:header_info]   || [:up, :counts, :words, :files, :dirs]
    @menu         = o[:menu]          == true
    @css          = o[:css]           || CSS
    @allow_upload = o[:allow_upload] 
    @date_format  = o[:date_format]   || "%d %b %Y, %H:%M"
    @fix_line_end = o[:fix_line_end]  == true
  end

  # get request
  def get(req)
    render(req)
  end

  # Post request, don't do anything special for now.
  def post(req)
    return render(req, ["Wik is in read-only mode"])        if readonly?
    return render(req, ["Form-based editing is disabled"])  if not @editmethods.include?(:form)

    params = req.query

    # Handle any parameters
    # First check we have the correct password, if required
    return render(req, ["No password supplied!"])             if @editpass.length > 0 and not params.keys.include?('pass')
    return render(req, ["Wrong password!"])                   if @editpass.length > 0 and @editpass != params['pass'].to_s
 
    # Check params and try doing stuff.  Prioritise editing.
    return edit_page(req)   if not %w{content path}.map{|p| params.keys.include?(p) }.include?(false)
    return upload_file(req) if not %w{file filename dir}.map{|p| params.keys.include?(p) }.include?(false) and @allow_upload
    # return delete_file(req) if not %w{filename deleteconfirm}.map{|p| params.keys.include?(p) }.include?(false) and @allow_delete
  
    # Error if nothing else returns
    return render(req, ["Cannot do anything with those POST parameters."]) 
  end

  private

  def edit_page(req)
    params = req.query
    #Check path.  IF it doesn't exist, create it
    path = params['path'].to_s 
    ensure_path_exists(path)
    return render(req, ["Cannot edit that path, as it is a directory!"])  if File.directory?(path)
    return render(req, ["Permission denied trying to write to #{path}"])  if not File.writable?(path)
    # here the file pointed to at path should be writable and present

   
    # Adjust line endings if requested
    content = params['content']
    content.gsub!(/\r\n?/, "\n") if @fix_line_end


    # write data
    fout = File.open(path, 'w')
    fout.write(content)
    fout.close

    # Check to see if the user wants the file deleting
    if params['content'] == '' then
      File.delete(path)
      dir_cleanup(path) 
    end
  
    render(req)
  end

  def upload_file(req)
    params = req.query
    filename = File.join(@basedir, params['dir'], params['filename'])
    
    # check permissions and file forms.
    return render(req, ["Cannot write to that path, it\'s a directory!"]) if File.directory?(filename)
    return render(req, ["Permission denied for #{filename}"])             if File.exist?(filename) and not File.writable?(filename)

    # Check if the user wants us to clobber things.
    return render(req, ["File already exists, and I was not instructed to overwrite it."]) if File.exists?(filename) and not params['clobber'] == "yes"

    # Remove file if no file contents given (requires clobber, checked above)
    if( File.exists?(filename) and params['file'].length == 0 )
      File.delete(filename)
      dir_cleanup(File.join(@basedir, params['dir']))
    else
      ensure_path_exists(filename)

      # Read content and see if it's binary
      content = params['file']
      binary  = MIME::Types.type_for(filename)[0].binary?
      content.gsub!(/\r\n?/, "\n") if not binary and @fix_line_end

      fout = File.open(filename, "w#{binary ? 'b' : ''}")
      fout.write(params['file'])
      fout.close
    end

    render(req)
  end

  # Get dirname from path
  def dirname_from_path(path)
    (path[-1] == File::SEPARATOR or File.directory?(path)) ? path : File.dirname(path)
  end

  # Create directories like mkdir -p if they don't exist
  def ensure_path_exists(path)
    dirname     = dirname_from_path(path)
    if not File.exist?(path) then
      # Work out the directory and mkdir -p it if it doesn't exist already
      FileUtils.mkdir_p( dirname )

      # if the thing is not a directory, touch it
      FileUtils.touch(path) if path[-1] != File::SEPARATOR
    end
  end

  # Recursively ascend and clean up dirs
  def dir_cleanup(path)
    dirname     = dirname_from_path(path)
    # Check if directory is empty and remove
    if @cleandirs then
      Pathname.new( dirname ).ascend(){ |d| 
        if dir_empty?(d)
          Dir.delete(d)
        else
          break
        end
      }
    end
  end

  def readonly?
    @editmethods.length == 0
  end

  # Test if a directory is empty (nothing but [., ..])
  def dir_empty?(dir)
    # thanks to http://www.ruby-forum.com/topic/84762
    !Dir.foreach(dir) {|n| break true unless /\A\.\.?\z/ =~ n}
  end

  # Return an error with a given code and message
  def error(path, code, msg)
    return code, "text/plain", "Error #{code}: #{msg}\r\nCurrent path: #{path}", {}
  end

  def find_file(path)
    path = File.join(@basedir, path)

    # Return if the file exists
    return path if File.exists?(path) and not File.directory?(path)

    # else add default
    path = "#{path}#{@default}"       if path.to_s[-1] == File::SEPARATOR

    # Check for all possible extensions and recurse if found
    @extensions.each{ |e|
      return "#{path}#{e}" if File.exists?("#{path}#{e}") and not File.directory?("#{path}#{e}")
    }

    # and, if not found, return default
    path = "#{path}#{@extensions[0]}" if not @extensions.include?(File.extname(path))

    # return path
    return path
  end

  def render(req, msgs=[])
    # Render favicon
    # avoid the correct MIME 'type image/vnd.microsoft.icon' because it doesn't work in ie
    if req.path == '/favicon.ico'
      code, mime, icon = render_favicon();
      return code, mime, icon, {}
    end


    # Build path
    path = find_file(req.path)

    # Check access to file or directory
    return error(path, 403, "Could not access path, though it exists (permissions issue?).") if File.exist?(path) and not File.readable?(path)

    # Render file if found
    mime, content = nil, nil
    if File.exists?(path)
      if req.query.keys.include?('direct') then
        mime, content = render_direct(path)
      else
        mime, content = render_file(path, msgs)
      end
    else
      mime, content = render_create(path, msgs)
    end
    return 200, mime, content, {} 

    return error(path, 404, "File not found!")
  end

  def render_create(path, msgs=[])
    # Return blank edit page if no file exists
    return "text/html; charset=UTF-8", compose_template(MISSING_TEMPLATE, File.basename(path), File.dirname(path), MIME::Types['text/plain'], path, '', msgs, :text) if not File.exist?(path) #and not @readonly 
  end

  # Serves a file without any further processing
  def render_direct(path, mime=nil)
    # Find mime type if none given
    if mime == nil
      mime = MIME::Types.type_for(path)
      mime = mime[0] || MIME::Types['text/plain'][0]
    end

    # then serve file
    return mime, File.open(path, (mime.binary?) ? 'rb' : 'r' ).read
  end

  def render_file(path, msgs=[])
    # render if markdown by extension or mime
    mime = MIME::Types.type_for(path)
    markdown_extension = @extensions.map{|e| File.extname(path).downcase == e }.include?(true)
    if markdown_extension or mime[0] == MIME::Types['text/plain'][0]
      content = Markdown.new( File.read(path) ).to_html 
      return 'text/html; charset=UTF-8', compose_template( PAGE_TEMPLATE, File.basename(path), File.dirname(path), mime[0], path, content, msgs, :text )
    end
    
    # else simply output the content raw (for binary types, html, etc)
    mime = mime[0] || MIME::Types['text/plain'][0]
    render_direct(path, mime)

  end

  def render_favicon()
    return error("/favicon.ico", 404, 'No Favicon exists') if not @favicon
    return 200, 'image/x-icon', Base64.decode64(@favicon)
  end

  def compose_template(template, title, pwd, mime, path, content, msgs=[], type=:text)
    # make local dir listing, with directories at the beginning
    dirs    = []
    pages   = []
    files   = []
    basedir = File.directory?(path) ? path : File.dirname(path)
    Dir.foreach( basedir ){|d| 
      if true != @blacklist.each{|b| break true if (d.to_s =~ b) }
        if File.directory?(File.join(basedir, d))
          dirs << d
        elsif @extensions.include?( File.extname(d).downcase )
          pages << d
        else
          files << d
        end
      end
    } if File.exist?( basedir )

    dirs << '..' if File.absolute_path(basedir) != File.absolute_path(@basedir) 

    pages.sort!
    dirs.sort!
    files.sort!

    return ERB.new(template).result(binding)
  end

  def h(str)
    return CGI.escapeHTML(str.to_s)
  end

end


# =============================================================================
# Parse options with increasing 'clobberiness'
opts = DEFAULT_OPTIONS
opts = load_from_file("/etc/wikrc", opts)
opts = load_from_file(File.join(Dir.home, ".wikrc"), opts)
opts = parse(opts)
opts = load_from_file(opts.config_file, opts) if opts.config_file

# Fork to the background if people request
if opts.daemonise then
  puts "Forking to background..."
  Process.daemon(true) 
end

# If a browser is given, launch it in a thread, and
# wait for it to close
# when it closes, signal the current process to die, thereby closing the
# server
if opts.browser
  pid = Process.pid
  fork do
    `#{opts.browser} "http://#{opts.interface}:#{opts.port}"`
    Process.kill("HUP", pid);
  end
end

# Start the server serving, with various options from the opts opt
Server.serve( opts.port, opts.interface, opts.path, 
             SimpleWikEngine.new(opts.path, 
                                 {:cleandirs    => opts.cleandirs, 
                                  :editmethods  => opts.editmethods,
                                  :editpass     => opts.editpass, 
                                  :default      => opts.default, 
                                  :blacklist    => [/^\.\.?$/] + opts.blacklist, 
                                  :extensions   => opts.extensions, 
                                  :favicon      => opts.favicon,
                                  :header_info  => opts.header_info,
                                  :menu         => opts.menu,
                                  :css          => opts.css,
                                  :allow_upload => opts.allow_upload,
                                  :date_format  => opts.date_format,
                                  :fix_line_end => opts.fix_line_end
                                  }
                                 ) 
            )
  
