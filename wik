#!/usr/bin/env ruby

require 'webrick'
require 'ostruct'
require 'optparse'
require 'logger'
require 'base64'
require 'markdown'
require 'mime/types'
require 'erb'
require 'cgi' # for escaping only
require 'fileutils'
require 'pathname'  # for removing dirs

HEAD_TEMPLATE = %q{
<html>
  <head>
    <title><%=h title %> -- Wik</title>
    <meta charset="UTF-8">

    <style type="text/css">
      div#banner{
        width: 100%;
        border-bottom: solid 2px #333;
        background-color: #eee;
      }

      div#banner h1{
        font-size: 1em;
        margin: 0.1em;
        padding: 0.1em;
        line-height: 1em;
      }

      div#footer{
        background-color: #eee;
        border-top: solid 2px #333;
        font-size: smaller;
        text-align: center;
      }

      div#menu{
        padding: 0 0.2em;
      }

      div#menu{
        text-align: right;
        float: right;
      }

      div#menu a{
        font-size: smaller;
        text-decoration: none;
        color: blue;
      }

      textarea#editbox{
        width: 95%;
        min-width: 400px;
        height: 400px;
        margin: 0 auto;
        display: block;
      }

      div#hide_edit{
        width: 100%;
        background-color: #eee;
        text-align: center;
        font-size: smaller;
      }
      
      div#hide_edit div#edit{
        display: none;
      }

      div#hide_edit:hover div#edit{
        display: block;
      }

      div#hide_edit:hover span#prompt{
        display: none;
      }
      
      div#hide_edit span#prompt_stick{
        display: none;
      }

      div#hide_edit:hover span#prompt_stick{
        display: inline;
      }

      div#edit{
        padding: 1em 0;
        text-align: center;
      }

      div#errors{
        border: solid 1px red;
        margin: 0.2em;
        padding: 0 0.2em;
        background-color: #ffd;
        font-size: smaller;
      }

      div#errors span#click_hide{
        float: right;
      }

      div#errors ul{
        margin: 0 0.1em;
        padding: 0;
      }

      div#errors ul li{
        list-style-type: none;
        padding: 0.1em;
        margin: 0.1em;
      }

      /* ------------ Main content styling ---------------- */
      /* Taken from https://github.com/jasonm23/markdown-css-themes */

      html { font-size: 100%; overflow-y: scroll; -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; }

      body{
      color:#444;
      font-family:Georgia, Palatino, 'Palatino Linotype', Times, 'Times New Roman', serif;
      font-size:12px;
      line-height:1.5em;
      padding:1em;
      margin:auto;
      max-width:42em;
      background:#fefefe;
      }

      a{ color: #0645ad; text-decoration:none;}
      a:visited{ color: #0b0080; }
      a:hover{ color: #06e; }
      a:active{ color:#faa700; }
      a:focus{ outline: thin dotted; }
      a:hover, a:active{ outline: 0; }

      ::-moz-selection{background:rgba(255,255,0,0.3);color:#000}
      ::selection{background:rgba(255,255,0,0.3);color:#000}

      a::-moz-selection{background:rgba(255,255,0,0.3);color:#0645ad}
      a::selection{background:rgba(255,255,0,0.3);color:#0645ad}

      p{
      margin:1em 0;
      }

      img{
      max-width:100%;
      }

      h1,h2,h3,h4,h5,h6{
      font-weight:normal;
      color:#111;
      line-height:1em;
      }
      h4,h5,h6{ font-weight: bold; }
      h1{ font-size:2.5em; }
      h2{ font-size:2em; }
      h3{ font-size:1.5em; }
      h4{ font-size:1.2em; }
      h5{ font-size:1em; }
      h6{ font-size:0.9em; }

      blockquote{
      color:#666666;
      margin:0;
      padding-left: 3em;
      border-left: 0.5em #EEE solid;
      }
      hr { display: block; height: 2px; border: 0; border-top: 1px solid #aaa;border-bottom: 1px solid #eee; margin: 1em 0; padding: 0; }
      pre, code, kbd, samp { color: #000; font-family: monospace, monospace; _font-family: 'courier new', monospace; font-size: 0.98em; }
      pre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; }

      b, strong { font-weight: bold; }

      dfn { font-style: italic; }

      ins { background: #ff9; color: #000; text-decoration: none; }

      mark { background: #ff0; color: #000; font-style: italic; font-weight: bold; }

      sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }
      sup { top: -0.5em; }
      sub { bottom: -0.25em; }

      ul, ol { margin: 1em 0; padding: 0 0 0 2em; }
      li p:last-child { margin:0 }
      dd { margin: 0 0 0 2em; }

      img { border: 0; -ms-interpolation-mode: bicubic; vertical-align: middle; }

      table { border-collapse: collapse; border-spacing: 0; }
      td { vertical-align: top; }

      @media only screen and (min-width: 480px) {
      body{font-size:14px;}
      }

      @media only screen and (min-width: 768px) {
      body{font-size:16px;}
      }

      @media print {
        * { background: transparent !important; color: black !important; filter:none !important; -ms-filter: none !important; }
        body{font-size:12pt; max-width:100%;}
        a, a:visited { text-decoration: underline; }
        hr { height: 1px; border:0; border-bottom:1px solid black; }
        a[href]:after { content: " (" attr(href) ")"; }
        abbr[title]:after { content: " (" attr(title) ")"; }
        .ir a:after, a[href^="javascript:"]:after, a[href^="#"]:after { content: ""; }
        pre, blockquote { border: 1px solid #999; padding-right: 1em; page-break-inside: avoid; }
        tr, img { page-break-inside: avoid; }
        img { max-width: 100% !important; }
        @page :left { margin: 15mm 20mm 15mm 10mm; }
        @page :right { margin: 15mm 10mm 15mm 20mm; }
        p, h2, h3 { orphans: 3; widows: 3; }
        h2, h3 { page-break-after: avoid; }
        div#banner, div#hide_edit{ display: none;}
      }

    </style>

  </head>
  <body>
    <div id="banner">
      <div id="menu">
        <% if basedir != @basedir %>
        <a href="../">[&larr;]</a>
        <% end %>
        <%= dirs.map{|c|
          c = "<a href='#{c}#{File.directory?(File.join(basedir, c)) ? '/' : ''}'/>#{h c}</a>"
        }.join(", ") %>
      </div>
      <h1><%= title %></h1>
    </div>

    <!-- error listing -->
    <% if @error.length > 0 %>
      <div id="errors">
        <span id="click_hide" onclick="javascript:document.getElementById('errors').style.display='none';">click to hide</span>
        <ul>
          <% @error.each{|e| %>
            <li><%=h e%></li>
          <% } %>
        </ul>
      </div>
    <% end 
    consume_errors %>
}

EDIT_TEMPLATE = %{
  <% if type == :text and not @readonly %>
    <div id="edit">
      <form action="" method="POST">
        <textarea id="editbox" name="content"><%=h File.exist?(path) ? File.read(path) : '' %></textarea>
        <% if @editpass.length > 0 %>
          <label for="pass">Password:</label><input type="password" name="pass" value=""/><br/>
        <% end %>
        <input type="hidden" value="<%=h path%>" name="path"/>
        <input type="reset" value="Reset"/>
        <input type="submit" value="Edit <%=h title%>"/>
      </form>
    </div>
  <% end %>
}

FOOT_TEMPLATE = %{
    <div id="footer">
      <% if File.exist?(path) %>
        Last edited: <%= File.mtime(path) %>
      <% end %>
    </div>
}

END_TEMPLATE = %{
  </body>
</html>
}


DIR_TEMPLATE= %{
    <h2>Directories</h2>
    <ul>
    <% dirs.each{|c| %>
      <li><a href="<%=h c%><%= File.directory?(File.join(basedir, c)) ? '/' : ''%>"/><%=h c%></a></li>
    <%}%>
    </ul>
    <h2>Files</h2>
    <ul>
    <% files.each{|c| %>
      <li><a href="<%=h c%>"/><%=h c%></a></li>
    <%}%>
    </ul>
} 

PAGE_TEMPLATE= HEAD_TEMPLATE + %{
    <%= content %>
} + FOOT_TEMPLATE + %{
    <% if not @readonly %>
      <div id="hide_edit">
        <span id="prompt">Hover to show edit box.</span>
        <span id="prompt_stick" onclick="javascript:{document.getElementById('prompt_stick').style.display = 'none'; document.getElementById('prompt').style.display = 'none'; document.getElementById('edit').style.display = 'block';};">Click to pin edit box.</span>
} + EDIT_TEMPLATE + %{
      </div>
    <% end %>
} + END_TEMPLATE

MISSING_TEMPLATE = HEAD_TEMPLATE + %{
  <% if not @readonly %>
    <h2>Editing Page: <%=h title%></h2>
} + EDIT_TEMPLATE + %{
  <hr/>
  <% end %>
} + DIR_TEMPLATE + FOOT_TEMPLATE + END_TEMPLATE

FAVICON = "AAABAAMAICEAAAEAIAAsEQAANgAAABAaAAABACAAEAcAAGIRAAAwOQAAAQAgALAsAAByGAAAKAAA
ACAAAABCAAAAAQAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
AAAAUwAAACv///8A////AP///wD///8A////AP///wAAAAAdAAAAVAAAAAj///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wAAAACYAAAA/AAAADL///8A////AP///wD///8A////AAAAAC8AAAD/AAAA
rwAAAAH///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AAAAAG4AAAD/AAAAzwAAAAX///8A////AP///wD/
//8AAAAAJgAAAP8AAAD/AAAAY////wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAARQAAAP8AAAD6AAAA
e////wD///8A////AP///wAAAAAeAAAA/wAAAPYAAACxAAAAJP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAA
AAAbAAAA/wAAANsAAAC8AAAAKv///wD///8A////AAAAABUAAAD/AAAA9AAAABgAAACwAAAABf//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AAAAAAEAAADyAAAA/gAAADIAAADAAAAAA////wD///8AAAAADAAAAP8AAAD0
////AAAAAEQAAACF////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AAAAAMgAAAD/AAAAMwAAAIEAAABw////AP//
/wAAAAAHAAAA/wAAAPT///8A////AAAAAIEAAABG////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AAAAAAH///8A////AP///wD///8AAAAAnwAAAP8AAABg
AAAACAAAAM4AAAAj////AAAAAAYAAAD/AAAA9P///wD///8AAAAABAAAALIAAAAY////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAAiAAAAJcAAAAU////AP//
/wAAAAB1AAAA/wAAAI3///8AAAAAPwAAAL0AAAABAAAABQAAAP8AAAD0////AP///wD///8AAAAA
NwAAALgAAAAB////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAADk
AAAA/wAAAJT///8A////AAAAAEwAAAD/AAAAuf///wD///8AAAAAnQAAAGYAAAAEAAAA/wAAAPT/
//8A////AP///wD///8AAAAAoQAAAF7///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AAAAAPIAAAD/AAAAKP///wD///8AAAAAIgAAAP8AAADm////AP///wAAAAASAAAA
2wAAAB8AAAD/AAAA9P///wD///8A////AP///wAAAAAbAAAA5wAAABT///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8AAAAAwQAAAP4AAAAE////AP///wAAAAADAAAA9wAAAP8A
AAAT////AP///wAAAABaAAAAtQAAAP8AAAD0////AP///wD///8A////AP///wAAAACwAAAAmf//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAABEAAAA/wAAADT///8A////
AP///wAAAADPAAAA/wAAAED///8A////AAAAAAEAAAC4AAAA/wAAAPT///8A////AP///wD///8A
////AAAAAFQAAAD5AAAAFv///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAA
AABnAAAA3AAAAEsAAAATAAAACAAAAKYAAAD/AAAAbP///wD///8A////AAAAACEAAAD2AAAA9v//
/wD///8A////AP///wD///8AAAAAJAAAAP8AAAB+////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wAAAAAoAAAAmgAAANYAAAD2AAAA+AAAAPsAAADVAAAAOP///wD///8A
////AAAAAGQAAADr////AP///wD///8A////AP///wAAAAALAAAA/wAAAL////8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AAAAAA3///8A////AP///wD///8A////AAAAADQAAAD/AAAA
5v///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8AAAAAsgAAAP8AAADL////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wAAAAAeAAAApAAAAFX///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//////////////////
/////////////////////////5/P///Pz///z8f//8fL///Lzf//y83//83O//nmz3/45s9/+edP
v/nnj5/954/f/ufP3/8D78/////P////j////9//////////////////////////////////////
/////ygAAAAQAAAANAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAA
AAgAAADfAAAAwwAAACkAAAAJAAAA4QAAAMUAAAA0////AP///wD///8A////AP///wD///8A////
AP///wAAAAAZAAAA/wAAAEUAAACDAAAARAAAAP8AAABHAAAAhQAAAD3///8A////AP///wD///8A
////AP///wD///8AAAAAAQAAAOYAAAAaAAAAAQAAAHEAAAD+AAAAIAAAAAEAAACJAAAALf///wD/
//8A////AP///wD///8A////AP///wAAAACCAAAAXv///wAAAAAEAAAA0gAAAFv///8AAAAADgAA
ALIAAAAB////AP///wD///8A////AAAAABsAAABAAAAACgAAAKoAAAAH////AAAAAG8AAACy////
AP///wAAAACMAAAAWP///wD///8A////AP///wD///8AAAAAgQAAAAwAAAAyAAAAlgAAAAEAAAAb
AAAA+QAAABP///8AAAAAUgAAAKr///8A////AP///wD///8A////AAAAAEwAAADZAAAA2AAAANYA
AABX////AAAAAIIAAABK////AAAAAC0AAADo////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wAAAAATAAAApP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA8z8AAPVfAAD3bwAA93cAAPu3AADtuwAA8bsA
AP/7AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAAKAAAADAAAAByAAAA
AQAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAApgAAAHIAAAAk////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAAoAAAAGkAAAAU////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAAABAAAAAQAAAAEA
AAABAAAAvAAAAP8AAAD/AAAAP////wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8AAAAAywAAAP8AAAD1AAAAIf///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wAAAAABAAAAAQAAAAEAAAABAAAAkwAAAP8AAAD/AAAA3gAAAAz///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8AAAAAvAAAAP8AAAD/AAAAuAAAAAH///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wAAAAABAAAAAgAAAAEAAAABAAAAagAAAP8AAAD/
AAAA/wAAAJf///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAArAAAAP8A
AAD/AAAA/wAAAFv///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAAAB////
AP///wD///8AAAAAPwAAAP8AAAD/AAAA/wAAAP8AAABF////AP///wD///8A////AP///wD///8A
////AP///wD///8AAAAAnQAAAP8AAAD/AAAA/wAAAOwAAAAf////AAAAAAH///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8AAAAAFgAAAP8AAAD/AAAA/wAAAP4AAADjAAAA
D////wD///8A////AP///wD///8A////AP///wD///8AAAAAjgAAAP8AAAD/AAAA/wAAAHoAAADG
AAAABf///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAAAQAA
AO0AAAD/AAAA/wAAAK4AAAD5AAAAnv///wD///8A////AP///wD///8A////AP///wD///8AAAAA
fgAAAP8AAAD/AAAA/wAAAAIAAAC1AAAAhv///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AAAAAMMAAAD/AAAA/wAAAK8AAAB7AAAA/wAAAEz///8A////AP//
/wD///8A////AP///wD///8AAAAAbwAAAP8AAAD/AAAA/////wAAAAASAAAA3gAAAEX///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAAJoAAAD/AAAA/wAAANsA
AAAFAAAAzgAAAOcAAAAS////AP///wD///8A////AP///wD///8AAAAAXwAAAP8AAAD/AAAA////
/wD///8AAAAANQAAAOEAAAAW////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AAAAAHAAAAD/AAAA/wAAAP4AAAAKAAAAMAAAAPsAAACl////AP///wD///8A////AP///wD/
//8AAAAAUAAAAP8AAAD/AAAA/////wD///8A////AAAAAGoAAAC3AAAAAv///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AAAAAEcAAAD/AAAA/wAAAP8AAAAz////AAAAAIIAAAD/
AAAAUv///wD///8A////AP///wD///8AAAAARwAAAP8AAAD/AAAA/////wD///8A////AAAAAAEA
AACmAAAAcf///wD///8A////AP///wD///8A////AP///wD///8A////AAAAAAH///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAAB4AAAD/AAAA
/wAAAP8AAABf////AAAAAAYAAADTAAAA6gAAABX///8A////AP///wD///8AAAAAQAAAAP8AAAD/
AAAA/////wD///8A////AP///wAAAAAMAAAA0AAAADP///8A////AP///wD///8A////AP///wD/
//8A////AAAAAAH///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AAAAAAEAAADzAAAA/wAAAP8AAACL////AP///wAAAAA1AAAA/QAAAKsAAAAB////
AP///wD///8AAAAAOQAAAP8AAAD/AAAA/////wD///8A////AP///wD///8AAAAALAAAANMAAAAN
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAA
AAAHAAAAWwAAAAH///8A////AP///wD///8A////AP///wAAAADLAAAA/wAAAP8AAAC3////AP//
/wD///8AAAAAiAAAAP8AAABY////AP///wD///8AAAAAMgAAAP8AAAD/AAAA/////wD///8A////
AP///wD///8A////AAAAAH0AAACg////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wAAAABfAAAA/wAAAMAAAAAo////AP///wD///8A////AP///wAA
AACiAAAA/wAAAP8AAADk////AP///wD///8AAAAACAAAANgAAADtAAAAGP///wD///8AAAAAKwAA
AP8AAAD/AAAA/////wD///8A////AP///wD///8A////AAAAAAYAAADSAAAAWP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAAC9AAAA/wAAAP8AAAD5
AAAAPP///wD///8A////AP///wAAAAB4AAAA/wAAAP8AAAD/AAAAEf///wD///8A////AAAAADoA
AAD+AAAAsgAAAAH///8AAAAAJAAAAP8AAAD/AAAA/wAAAAP///8A////AP///wD///8A////AP//
/wAAAAA6AAAA6QAAABH///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wAAAADjAAAA/wAAAP8AAADlAAAACP///wD///8A////AP///wAAAABPAAAA/wAAAP8AAAD/
AAAAPP///wD///8A////AP///wAAAACTAAAA/wAAAF////8AAAAAHAAAAP8AAAD/AAAA/wAAAAn/
//8A////AP///wD///8A////AP///wD///8AAAAArQAAAJj///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wAAAAD2AAAA/wAAAP8AAABw////AP///wD///8A////
AP///wAAAAAmAAAA/wAAAP8AAAD/AAAAaP///wD///8A////AP///wAAAAAPAAAA5wAAAPAAAAAc
AAAAFQAAAP8AAAD/AAAA/wAAAA7///8A////AP///wD///8A////AP///wD///8AAAAAJgAAAPsA
AAA5////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAADQAAAA/wAA
AP8AAAA1////AP///wD///8A////AP///wAAAAAEAAAA+QAAAP8AAAD/AAAAlP///wD///8A////
AP///wD///8AAAAAWAAAAP8AAAC5AAAADwAAAP8AAAD/AAAA/wAAABT///8A////AP///wD///8A
////AP///wD///8A////AAAAALUAAADSAAAABf///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wAAAAClAAAA/wAAAP8AAAAO////AP///wD///8A////AP///wD///8AAAAA0wAA
AP8AAAD/AAAAwP///wD///8A////AP///wD///8AAAAAAQAAALoAAAD/AAAAbAAAAP8AAAD/AAAA
/wAAABr///8A////AP///wD///8A////AP///wD///8A////AAAAAFIAAAD/AAAAc////wD///8A
////AP///wD///8A////AP///wD///8A////AP///wAAAABKAAAA/wAAAP8AAAAX////AP///wD/
//8A////AP///wD///8AAAAAqgAAAP8AAAD/AAAA7AAAAAH///8A////AP///wD///8A////AAAA
ACUAAAD4AAAA9AAAAP8AAAD/AAAA/wAAACD///8A////AP///wD///8A////AP///wD///8A////
AAAAAAYAAADqAAAA6gAAAAj///8A////AP///wD///8A////AP///wD///8A////AP///wAAAAAB
AAAAwAAAAP8AAABe////AP///wD///8A////AP///wD///8AAAAAgAAAAP8AAAD/AAAA/wAAABj/
//8A////AP///wD///8A////AP///wAAAAB+AAAA/wAAAP8AAAD/AAAA/wAAACX///8A////AP//
/wD///8A////AP///wAAAAAB////AAAAAAEAAACSAAAA/wAAAGD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8AAAAALQAAAO4AAADkAAAAIP///wD///8A////AP///wD///8A
AAAAVwAAAP8AAAD/AAAA/wAAAET///8A////AP///wD///8A////AP///wAAAAAHAAAA2QAAAP8A
AAD/AAAA/wAAACz///8A////AP///wD///8A////AP///wAAAAABAAAAAQAAAAEAAABgAAAA/wAA
AM4AAAAB////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAAC4AAADpAAAA
8QAAAIcAAABIAAAAHAAAABIAAAALAAAAMQAAAP8AAAD/AAAA/wAAAHD///8A////AP///wD///8A
////AP///wD///8AAAAAQwAAAP8AAAD/AAAA/wAAADn///8A////AP///wAAAAABAAAAAQAAAAEA
AAAB////AP///wAAAAA3AAAA/wAAAP8AAAA9////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wAAAAAhAAAApgAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA
/wAAALEAAAAI////AP///wD///8A////AP///wD///8A////AAAAAKUAAAD/AAAA/wAAAEn///8A
////AP///wD///8A////AP///wD///8A////AP///wAAAAAPAAAA/wAAAP8AAACR////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAACsAAACcAAAA3wAA
APsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADoAAAARP///wD///8A////AP///wD///8A////
AAAAABcAAACsAAAA/AAAAFj///8A////AP///wD///8A////AP///wD///8A////AP///wAAAAAb
AAAA/wAAAP8AAADM////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AAAAAAMAAAALAAAADQAAAA8AAAASAAAAFAAAABYAAAAYAAAAF///
/wD///8A////AP///wD///8A////AP///wD///8AAAAAHAAAACb///8A////AP///wD///8A////
AP///wD///8A////AP///wAAAABCAAAA/wAAAP8AAADs////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAACCAAAA/wAAAP8AAAD7////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAA
ACMAAADxAAAA/wAAAP8AAADr////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AAAAAE0AAAD4AAAA/wAAAP8AAAC3////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAAAwAAAAwwAAAMkA
AAA3////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8AAAAAAQAAAAH///8A////AAAAAAH///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////
AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A
////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
//8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAAAQAAAAH///8A////
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////wAA////////AAD///////8AAP//////
/wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
AAD///////8AAP/v/9///wAA/+P/x///AAD/4f/D//8AAP/w/8P//wAA//D/wf//AAD/8H/C//8A
AP/wP+J//wAA//C/43//AAD/8J/jv/8AAP/4z+Pf/wAA//jP49//AAD/+Ofj7/8AAP/4c+P3/wAA
//hz4/v/AAD5+Hnj+/8AAPD8fOP9/wAA8Px84/z/AADx/H5j/v8AAPH8PyP+fwAA8fw/I/9/AAD5
/D+D/z8AAPn8P8P/PwAA/P4/w/+fAAD+Pj/j/58AAP8AH+P/jwAA/8AP8/+PAAD//////48AAP//
////DwAA//////8PAAD//////w8AAP//////nwAA////////AAD///////8AAP///////wAA////
////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD/////
//8AAP///////wAA////////AAD///////8AAA=="



# Parse command-line options.
def parse
  # Set up defaults
  opts            = OpenStruct.new
  opts.daemonise  = true
  opts.interface  = "127.0.0.1"
  opts.port       = 8080
  opts.path       = "./content/"
  opts.default    = 'Index'
  opts.readonly   = false
  opts.editpass   = ''
  opts.cleandirs  = true 

  op = OptionParser.new do |o|
    o.on('-p', '--port PORT', 'Port to listen on'){ |x| opts.port = x.to_i }
    o.on('-D', '--default INDEX', 'Index page name'){ |x| opts.default = x.to_s }
    o.on('-n', '--daemonise', 'Daemonise process'){ |x| opts.daemonise = false }
    o.on('-i', '--interface INTERFACE', 'Listen on the given interface (default is 127.0.0.1, set to '' for all)'){|x| opts.interface = x.to_s }
    o.on('-r', '--read-only', 'Disable editing features'){ |x| opts.readonly = true }
    # o.on('-k', '--there-can-be-only-one', 'Only allow one instance (kill if a pid file is found)'){ |x| opts.kill = true }
    o.on('-d', '--directory DIR', 'The directory in which to find content'){ |d| opts.path = d.to_s }
    o.on('-e', '--edit-pw PASSWORD', 'The password to use to prevent editing (insecure without SSL)'){|x| opts.editpass = x.to_s } 
    o.on('-c', '--no-clean-dirs', 'Leave empty directories when deleting files'){|x| opts.cleandirs = false }
  end
  op.parse!

  return opts
end

# Server that passes things onto the wiki engine
class Server < WEBrick::HTTPServlet::AbstractServlet
  def self.serve(port, bind=nil, local_resource_path="", engine=nil)
    server = WEBrick::HTTPServer.new(:Port        => port, 
                                     :BindAddress => bind)

    # server.mount("/#{resources}",     WEBrick::HTTPServlet::FileHandler, local_resource_path, {:FancyIndexing => false})
    server.mount("/", Server, {:engine => engine})

    trap "INT" do server.shutdown end
    server.start
  end

  def initialize(server, options={})
    super(server, options)
    @engine = options[:engine]
  end

  def do_GET(request, response)
    status, content_type, body, cookies = @engine.get(request)
    return build_response( response, status, cookies, content_type, body )
  #rescue HTMLError => htmle 
  #  return htmle.code, 'text/plain', "#{htmle}\n\n#{htmle.backtrace.join("\n")}", {}
  # rescue Exception => e
  #   return 500, 'text/plain', "#{e}\n\n#{e.backtrace.join("\n")}", {}
  end

  def do_POST(request, response)
    status, content_type, body, cookies = @engine.post(request)
    return build_response( response, status, cookies, content_type, body )
  # rescue HTMLError => htmle 
  #   return htmle.code, 'text/plain', "#{htmle}\n\n#{htmle.backtrace.join("\n")}", {}
  # rescue Exception => e
  #   return 500, 'text/plain', "#{e}\n\n#{e.backtrace.join("\n")}", {}
  end

  private

  # build a response to the client from the given data
  def build_response( response, status, cookies, content_type, body )
    response.status           = status || 200
    cookies.each{ |k,v|         response.cookies << "#{k}=#{v}" }
    response['Content-Type']  = content_type || 'text/plain'
    response.body             = body || ''

    return response
  end
end


class HTMLError < Exception 
  attr_reader :code

  def initialize(msg, code)
    super(msg)
    @code = code
  end

end

# Simple wiki engine
class SimpleWikEngine
  def initialize(path, readonly=false, cleandirs=false, editpass='', default="Index", blacklist=['.', '..'], extensions=%w{markdown mdown mkdn md mkd mdwn mdtxt mdtext text})
    @basedir    = path
    @extensions = extensions
    @blacklist = blacklist 
    @default = default
    @readonly = readonly
    @editpass = editpass
    @error = []
    @cleandirs = cleandirs
  end

  # get request
  def get(req)
    render(req)
  end

  # Post request, don't do anything special for now.
  def post(req)
    return nonfatal(req, "Wik is in read-only mode") if @readonly

    params = CGI::parse(req.body)

    # Handle any parameters
    # First check we have both content and path
    return nonfatal(req, "Wrong parameters to POST Request")  if not params.keys.include?('content') and params.keys.include?('path')
    return nonfatal(req, "No password supplied!")             if @editpass.length > 0 and not params.keys.include?('pass')
    return nonfatal(req, "Wrong password!")                   if @editpass.length > 0 and @editpass != params['pass'][0].to_s
  

    #Check path.  IF it doesn't exist, create it
    path = params['path'][0].to_s 
    dirname     = (path[-1] == File::SEPARATOR or File.directory?(path)) ? path : File.dirname(path)
    if not File.exist?(path) then
      # Work out the directory and mkdir -p it if it doesn't exist already
      FileUtils.mkdir_p( dirname )

      # if the thing is not a directory, touch it
      FileUtils.touch(path) if path[-1] != File::SEPARATOR
    end
    return nonfatal(req, "Cannot write to that path, as it is a directory!") if File.directory?(path)
    return nonfatal(req, "Permission denied trying to write to #{path}") if not File.writable?(path)
    # here the file pointed to at path should be writable and present

    # write data
    fout = File.open(path, 'w')
    fout.write(params['content'][0])
    fout.close

    # Check to see if the user wants the file deleting
    if params['content'][0] == '' then
      File.delete(path)
    
      # Check if directory is empty and remove
      if @cleandirs then
        Pathname.new( dirname ).ascend(){ |d| 
          if dir_empty?(d)
            Dir.delete(d)
          else
            break
          end
        }
      end

    end

    # Then show page
    get(req)
  end

  private

  # Test if a directory is empty (nothing but [., ..])
  def dir_empty?(dir)
    # thanks to http://www.ruby-forum.com/topic/84762
    !Dir.foreach(dir) {|n| break true unless /\A\.\.?\z/ =~ n}
  end

  # Add an error to the list, then call get
  # Allows processing of requests half-way through
  def nonfatal(req, msg)
    @error << msg
    return get(req)
  end

  def error(path, msg, code)
    return code, "text/html", "ERRL #{msg}", {}
  end

  def consume_errors()
    @error = []
  end

  def render(req, override_path=nil)
    # Build path
    path = override_path || File.join( @basedir, req.path )

    # Render favicon
    # avoid the correct MIME 'type image/vnd.microsoft.icon' because it doesn't work in ie
    return 200, 'image/x-icon', render_favicon(), {} if req.path == '/favicon.ico'

    # Check access to file or directory
    raise "Could not access path #{path}, though it exists." if File.exists?(path) and not File.readable?(path)

    # Check for default file if path is dir
    return render(req, File.join(path, @default)) if File.directory?(path) 
      #begin
      #   
      #rescue Exception => htmle
      #  return 200, 'text/html', generate_listing(path), {} if File.directory?(path)
      #end
   # end
    
    # Render file if found
    if File.exists?(path)
      mime, content = render_file(path)
      return 200, mime, content, {} 
    end

    # Check for all possible extensions and recurse if found
    @extensions.each{ |e|
      return render(req, "#{path}.#{e}") if File.exists?(path + ".#{e}") 
    }

      # Apply some heuristics to create some 'blank' edit pages
      path = "#{path}#{@default}" if  path.to_s[-1] == File::SEPARATOR
      path = "#{path}.#{@extensions[0]}" if not @extensions.include?(File.extname(path)[1..-1])
      mime, content = render_file(path)
      return 200, mime, content, {}
    
    raise "File not found: #{req.path}"
    #return 200, 'text/plain', "#{req.path}", {}
  end

  def render_file(path)
    # Return blank edit page if no file exists
    return "text/html; charset=UTF-8", compose_template(MISSING_TEMPLATE, File.basename(path), File.dirname(path), MIME::Types['text/plain'], path, '', :text) if not File.exist?(path) #and not @readonly 

    # render if markdown by extension or mime
    mime = MIME::Types.type_for(path)
    markdown_extension = @extensions.map{|e| File.extname(path).downcase == ".#{e}" }.include?(true)
    if markdown_extension or mime.include?(MIME::Types['text/plain'][0])
      content = Markdown.new( File.read(path) ).to_html 
      return 'text/html; charset=UTF-8', compose_template( PAGE_TEMPLATE, File.basename(path), File.dirname(path), mime[0], path, content, :text )
    end
    
    # else simply output the content raw (for binary types, html, etc)
    mime = mime[0] || MIME::Types['text/plain'][0]
    return mime, File.open(path, (mime.binary?) ? 'rb' : 'r' ).read
  end

  def render_favicon()
    return Base64.decode64(FAVICON)
  end

  def compose_template(template, title, pwd, mime, path, content, type=:text)
    # make local dir listing, with directories at the beginning
    dirs    = []
    files   = []
    basedir = File.directory?(path) ? path : File.dirname(path)
    Dir.foreach( basedir ){|d| 
      if not @blacklist.include?(d) #and not File.identical(path, d) then
        if File.directory?(File.join(basedir, d))
          dirs << d
        else
          files << d
        end
      end
    } if File.exist?( basedir )

    return ERB.new(template).result(binding)
  end

  def h(str)
    return CGI.escapeHTML(str.to_s)
  end

end


# =============================================================================
opts = parse
Server.serve( opts.port, opts.interface, opts.path, 
             SimpleWikEngine.new(opts.path, opts.readonly, opts.cleandirs, opts.editpass, opts.default) 
            )
